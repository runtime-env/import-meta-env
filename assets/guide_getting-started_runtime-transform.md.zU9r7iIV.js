import{_ as a,c as t,o as i,ae as s}from"./chunks/framework.CTVYQtO4.js";const m=JSON.parse('{"title":"Runtime Transform","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started/runtime-transform.md","filePath":"guide/getting-started/runtime-transform.md"}'),n={name:"guide/getting-started/runtime-transform.md"};function r(o,e,l,p,h,d){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="runtime-transform" tabindex="-1">Runtime Transform <a class="header-anchor" href="#runtime-transform" aria-label="Permalink to &quot;Runtime Transform&quot;">​</a></h1><p>Please read the <a href="/guide/getting-started/introduction.html#guide">guide</a> for how to use this tool.</p><h2 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/@import-meta-env/cli" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@import-meta-env/cli.svg?color=blue" alt="NPM version"></a></p><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @import-meta-env/cli</span></span></code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import-meta-env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.example</span></span></code></pre></div><p>Related examples: <a href="https://github.com/import-meta-env/import-meta-env/blob/main/packages/examples/docker-starter-example" target="_blank" rel="noreferrer">docker</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>By default, import-meta-env will automatically replace all files in the <a href="https://github.com/import-meta-env/import-meta-env/blob/e4defac25c89ff1bfd71ec478713720bd82d85d4/packages/cli/src/shared.ts#L5-L16" target="_blank" rel="noreferrer">common bundle output directories</a></p><p>You can override this behavior by passing the <code>-p, --path &lt;path...&gt;</code> option.</p><p>For more information, see <a href="/api.html#import-meta-env-cli">API</a>.</p></div><h3 id="without-node-js" tabindex="-1">Without Node.js <a class="header-anchor" href="#without-node-js" aria-label="Permalink to &quot;Without Node.js&quot;">​</a></h3><p>The <a href="https://nodejs.org/api/single-executable-applications.html#single-executable-applications" target="_blank" rel="noreferrer">Single executable applications</a> feature allows the distribution of a Node.js application conveniently to a system that does not have Node.js installed, you could use it to package the <code>import-meta-env</code> script into a <code>node</code> binary.</p>',12)]))}const u=a(n,[["render",r]]);export{m as __pageData,u as default};
